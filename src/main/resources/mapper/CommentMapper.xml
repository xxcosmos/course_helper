<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.xiaoyuu.course_helper.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="me.xiaoyuu.course_helper.model.Comment">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="owner_id" jdbcType="VARCHAR" property="ownerId"/>
        <result column="from_id" jdbcType="INTEGER" property="fromId"/>
        <result column="like_num" jdbcType="INTEGER" property="likeNum"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="rate" jdbcType="INTEGER" property="rate"/>
    </resultMap>


    <select id="selectByOwnerId" resultMap="BaseResultMap">
        select id,
               owner_id,
               from_id,
               like_num,
               content,
               create_time,
               update_time,
               rate
        from comment
        where owner_id = #{ownerId}
        order by like_num desc
    </select>
    <select id="getCommentCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(id)
        from comment
        where owner_id = #{ownerId}
    </select>

    <update id="addLike">
        update comment
        set like_num = like_num + 1
        where id = #{id}
    </update>
    <update id="removeLike">
        update comment
        set like_num = like_num - 1
        where id = #{id}
    </update>

    <select id="isExisted" resultType="java.lang.Integer">
        select id
        from comment
        where owner_id = #{ownerId}
          and from_id = #{fromId}
        limit 1
    </select>
    <select id="selectHottest" resultType="java.lang.String">
        select distinct (owner_id) as ownerid
        from comment
        group by owner_id
        order by count(ownerid) desc
        limit #{num}
    </select>

    <select id="getAverageRate" parameterType="java.lang.String" resultType="java.lang.Double">
        select avg(rate)
        from comment
        where owner_id = #{ownerId}
    </select>
</mapper>